import { withPublic } from "@/hooks/routes";
import { auth, AuthService } from "@/services/auth";
import { Inter } from "next/font/google";
import styles from "@/styles/Login.module.css";
import Head from "next/head";
import React, { useEffect, useState } from "react";
import Image from "next/image";
import { RecaptchaVerifier } from "firebase/auth";
import 'react-phone-number-input/style.css'
import PhoneInput from 'react-phone-number-input'

const inter = Inter({ subsets: ["latin"] });

export function Login({ userContext }: any) {
  const { setUser } = userContext;

  const [isSmsSent, setIsSmsSent] = useState(false);
  const [isDisabled, setIsDisabled] = useState(false);

  const [otpCode, setOtpCode] = useState("");
  const [phoneNumber, setPhoneNumber] = useState("");
  
  const onPhoneInputChange = (value: any) => {
    setPhoneNumber(value);
  }

  const onOtpCodeChange = (e: any) => {
    setOtpCode(e.target.value);
  }

  const onBtnNextClick = async () => {
    if (phoneNumber === "") {
      alert("Please enter your phone number.");

      return false;
    }

    if (window.recaptchaVerifier !== undefined) {
      window.recaptchaVerifier.verify();
    }

    if (!isDisabled) 
    {
      setIsDisabled(true);
      const btnNext = document.getElementById("btnNext");
      if (btnNext) btnNext.innerHTML = "Sending...";
  
      const appVerifier = window.recaptchaVerifier;
      try {
        const result = await AuthService.loginWithPhone(phoneNumber, appVerifier)
        if (result) {
          window.confirmationResult = result;
          setIsSmsSent(true);
          setIsDisabled(false);
        }
      } catch (error: any) {
        if (btnNext) btnNext.innerHTML = "Send Code";
        setPhoneNumber("");
        setIsDisabled(false);
        alert(error);
      }  
    }
  };

  const onBtnSubmitClick = async () => {
    if (otpCode === "") {
      alert("Please enter the OTP code.");
      return false;
    }
    if (!isDisabled) 
    {
      setIsDisabled(true);
      const btnSubmit = document.getElementById("btnSubmit");
      if (btnSubmit) btnSubmit.innerHTML = "Logging in, please wait..";

      window.confirmationResult.confirm(otpCode).then((result: any) => {
        setUser(result.user ?? null);
      }).catch((error: any) => {
        console.log(error);
        alert(error);
      });
    }
  }
  
  const onGooglebuttonClick = async () => {
    try {
      const result = await AuthService.loginWithGoogle();
      setUser(result.user ?? null);
    } catch (error: any) {
      alert(error);
    }
  };

  useEffect(() => {
    if (typeof window !== "undefined") {
      window.recaptchaVerifier = new RecaptchaVerifier(
        "btnNext",
        {
          size: "invisible",
          callback: (response: any) => {
            console.log('recaptca solved');
          },
        },
        auth
      );
    }
  }, []);

  return (
    <>
      <Head>
        <title>Login - Next.jsa</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <header>
          <h1 className={inter.className}>Welcome to</h1>
          <div className={styles.center}>
            <Image
              className={styles.logo} src="/next.svg" alt="Next.js Logo" width={180} height={37} priority
            />
            <div className={styles.thirteen}>
              <Image src="/thirteen.svg" alt="13" width={40} height={31} priority
              />
            </div>
          </div>
        </header>
        <div className={styles.card} id="loginCard">
          <section className={isSmsSent ? styles.displayNone : styles.displayBlock} id="loginSection">
            <header>
              <h1 className={inter.className}>Login</h1>
              <p className={inter.className}>
                Please verify your phone number to continue.
              </p>
            </header>
            <div className={styles.formGroup}>
              <label htmlFor="phoneNumber" className={inter.className}>
                Phone Number
              </label>
              <PhoneInput defaultCountry="ID" placeholder="Enter phone number" id="phoneNumber" value={phoneNumber} onChange={onPhoneInputChange}/>
            </div>
            <div className={styles.formGroup}>
              <button type="button" className={styles.btnSubmit} id="btnNext" onClick={onBtnNextClick}>
                Send Code
              </button>
            </div>
            <div className={styles.formGroup + " " + styles.textDivider}>
              <p className={inter.className}>or</p>
            </div>
            <button onClick={onGooglebuttonClick} className={styles.btnGoogle}>
              <div className={styles.btnGoogleIconWrapper}>
                <img src="/icon_google.png" alt="Google Logo" />
              </div>
              <div className={styles.btnGoogleText}>
                <p className={inter.className}>Continue with Google</p>
              </div>
            </button>
          </section>
          <section className={isSmsSent ? styles.displayBlock : styles.displayNone} id="otpVerificationSection">
            <header>
              <h1 className={inter.className}>We sent you an SMS code</h1>
              <p className={inter.className}>
                on {phoneNumber}. Please enter the code below to continue.
              </p>
            </header>
            <div className={styles.formGroup}>
              <label htmlFor="phoneNumber" className={inter.className}>
                OTP Code
              </label>
              <input type="text" id="otpCode" placeholder="Enter OTP code" onChange={onOtpCodeChange}></input>
            </div>
            <div className={styles.formGroup}>
              <button type="button" className={styles.btnSubmit} id="btnSubmit"  onClick={onBtnSubmitClick}> Submit </button>
            </div>
          </section>
        </div>
      </main>
    </>
  );
}

export default withPublic(Login);
